{"version":3,"file":"static/js/882.1281ea43.chunk.js","mappings":"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","sources":["places/components/PlaceItem.js","places/components/PlaceList.js","places/components/pages/UserPlaces.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceItem.css';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n// import Map from '../../shared/components/UIElements/Map';\r\n\r\nconst PlaceItem = (props) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          {/* <Map center={props.coordinates} zoom={16}   /> */}\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={` ${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}> EDIT </Button>\r\n            )}\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\n\r\nimport './PlaceList.css';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nexport default function PlaceList(props) {\r\n  if (!props.items || props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No Places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">Share Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../PlaceList';\r\nimport ErrorModal from '../../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId) => {\r\n    setLoadedPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && (\r\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n\r\n// const UserPlaces = () => {\r\n//   const [loadedPlaces, setLoadedPlaces] = useState();\r\n//   const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n//   const userId = useParams().userId;\r\n\r\n//   useEffect(() => {\r\n//     const fetchPlaces = async () => {\r\n//       try {\r\n//         const responseData = await sendRequest(\r\n//           `http://localhost:5000/api/places/user/${userId}`\r\n//         );\r\n//         setLoadedPlaces(responseData.places);\r\n//       } catch (err) {}\r\n//     };\r\n//     fetchPlaces();\r\n//   }, [sendRequest, userId]);\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <ErrorModal error={error} onClear={clearError} />\r\n//       {isLoading && (\r\n//         <div className=\"center\">\r\n//           <LoadingSpinner />\r\n//         </div>\r\n//       )}\r\n//       {!isLoading && loadedPlaces && <PlaceList item={loadedPlaces} />}\r\n//     </React.Fragment>\r\n//   );\r\n// };\r\n\r\n// export default UserPlaces;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","showMap","setShowMap","_useState3","_useState4","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","process","concat","id","Authorization","token","onDelete","t0","stop","apply","arguments","_jsxs","React","children","_jsx","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","className","inverse","danger","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","map","place","PlaceItem","creator","coordinates","location","onDeletePlace","loadedPlaces","setLoadedPlaces","useParams","useEffect","fetchPlaces","responseData","sent","places","deletedPlaceId","prevPlaces","filter","style"],"sourceRoot":""}